library(data.table)
library(Rtsne)
library(ggplot2)
library(caret)
library(ClusterR)
library(dplyr)


# load in data 
data<-fread("~/Desktop/data.csv")
sub<-fread("~/Desktop/xes.csv")

#write in data
fwrite(data,"~/Desktop/380_d/dogs/project/volume/data/raw/data.csv")
fwrite(sub,"~/Desktop/380_d/dogs/project/volume/data/raw/xes.csv")

set.seed(42)

data$breed <- 1
data[1]$breed <- 3
data[5]$breed <- 2
data[6]$breed <- 4

breed <- data$breed
id <- data$id

data$id <- NULL
data$breed <- NULL

# do a pca
pca<-prcomp(data)

# look at the percent variance explained by each pca
screeplot(pca)

# look at the rotation of the variables on the PCs
pca

# see the values of the scree plot in a table 
summary(pca)

# see a biplot of the first 2 PCs
biplot(pca)

# use the unclass() function to get the data in PCA space
pca_dt<-data.table(unclass(pca)$x)

pca_dt$breed <- breed
plot1<-ggplot(pca_dt,aes(x=PC1,y=PC2,col=as.factor(pca_dt$breed)))+geom_point()
plot1+geom_hline(yintercept=-3)+geom_vline(xintercept=12) +
  geom_text(data = pca_dt[breed %in% c(3, 2, 4), ],
            aes(x = PC1, y = PC2, label = as.factor(breed)), vjust = -0.5, col="black")


# Laurens van der Maaten page on t-SNE author of original t-SNE paper
#https://lvdmaaten.github.io/tsne/

# distill.pub guide on using t-SNE effectivly
#https://distill.pub/2016/misread-tsne/

# response to distill.pub article with discussion of practical application of t-SNE
#https://towardsdatascience.com/how-to-tune-hyperparameters-of-tsne-7c0596a18868


# run t-sne on the PCAs, note that if you already have PCAs you need to set pca=F or it will run a pca again. 
# pca is built into Rtsne, ive run it seperatly for you to see the internal steps

set.seed(3)
tsne<-Rtsne(pca_dt,pca = F,perplexity=90,check_duplicates = F)
#perplexity = 3,5,15,25,50,100 ````

# grab out the coordinates
tsne_dt<-data.table(tsne$Y)

tsne_dt$breed<-breed

# plot, note that in this case I have access to party so I can see that it seems to have worked, You do not have access
# to species so you will just be plotting in black to see if there are groups. 
ggplot(tsne_dt,aes(x=V1,y=V2, col=as.factor(tsne_dt$breed)))+geom_point() +
  geom_text(data = tsne_dt[breed %in% c(3, 2, 4), ],
            aes(x = V1, y = V2, label = as.factor(breed)), vjust = -0.5, col="black")



# use a gaussian mixture model to find optimal k and then get probability of membership for each row to each group

# this fits a gmm to the data for all k=1 to k= max_clusters, we then look for a major change in likelihood between k values
k_bic<-Optimal_Clusters_GMM(tsne_dt[,.(V1,V2)],max_clusters = 10,criterion = "BIC")

# now we will look at the change in model fit between successive k values
delta_k<-c(NA,k_bic[-1] - k_bic[-length(k_bic)])

# I'm going to make a plot so you can see the values, this part isnt necessary
del_k_tab<-data.table(delta_k=delta_k,k=1:length(delta_k))

# plot 
ggplot(del_k_tab,aes(x=k,y=-delta_k))+geom_point()+geom_line()+
  scale_x_continuous(breaks = scales::pretty_breaks(n = 10))+
  geom_text(aes(label=k),hjust=0, vjust=-1)


opt_k<-4

# now we run the model with our chosen k value
gmm_data<-GMM(tsne_dt[,.(V1,V2)],opt_k)

# the model gives a log-likelihood for each datapoint's membership to each cluster, me need to convert this 
# log-likelihood into a probability

l_clust<-gmm_data$Log_likelihood^10

l_clust<-data.table(l_clust)

net_lh<-apply(l_clust,1,FUN=function(x){sum(1/x)})

cluster_prob<-1/l_clust/net_lh

# we can now plot to see what cluster 1 looks like

tsne_dt$Cluster_1_prob<-cluster_prob$V1
tsne_dt$Cluster_2_prob<-cluster_prob$V2
tsne_dt$Cluster_3_prob<-cluster_prob$V3
tsne_dt$Cluster_4_prob<-cluster_prob$V4

ggplot(tsne_dt,aes(x=V1,y=V2,col=Cluster_3_prob))+geom_point() +
  geom_text(data = tsne_dt[breed %in% c(3, 2, 4), ],
            aes(x = V1, y = V2, label = as.factor(breed)), vjust = -0.5, col="red")

# overriding to a submission
sub$breed_1 <- cluster_prob$V1
sub$breed_2 <- cluster_prob$V2
sub$breed_4 <- cluster_prob$V3
sub$breed_3 <- cluster_prob$V4

fwrite(sub,"~/Desktop/p90.csv")


